import{_ as e,c as r,o as a,ag as o}from"./chunks/framework.BSxiluPM.js";const g=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"chapter00/introduction.md","filePath":"chapter00/introduction.md"}'),s={name:"chapter00/introduction.md"};function n(i,t,d,h,l,c){return a(),r("div",null,[...t[0]||(t[0]=[o('<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h1><h2 id="new-terms" tabindex="-1">New terms <a class="header-anchor" href="#new-terms" aria-label="Permalink to &quot;New terms&quot;">​</a></h2><h3 id="_1-elusive-bugs" tabindex="-1">1. <strong>Elusive Bugs</strong> <a class="header-anchor" href="#_1-elusive-bugs" aria-label="Permalink to &quot;1. **Elusive Bugs**&quot;">​</a></h3><p><strong>Definition</strong>: Elusive bugs are programming errors that are hard to find and reproduce because they only happen under specific, often rare, conditions.</p><p><strong>Example</strong>: A program crashes only when run on a particular operating system version, or only after running for several hours.</p><p><strong>Explanation</strong>: It’s like trying to catch a mouse that only comes out when you’re not looking. Similarly these bugs can hide until just the right moment, making them tricky to track down and fix.</p><h2 id="important-points" tabindex="-1">Important points <a class="header-anchor" href="#important-points" aria-label="Permalink to &quot;Important points&quot;">​</a></h2><ol><li>Contemporary tools using rust:<br> a. <strong>cargo:</strong> dependency manager and build tool<br> b. <strong>rustfmt:</strong> code formatter<br> c. <strong>rust-analyzer:</strong> language server</li></ol><h2 id="key-words" tabindex="-1">Key words <a class="header-anchor" href="#key-words" aria-label="Permalink to &quot;Key words&quot;">​</a></h2><p>These keywords are widely used in the community.</p><h3 id="ferris" tabindex="-1">Ferris: <a class="header-anchor" href="#ferris" aria-label="Permalink to &quot;Ferris:&quot;">​</a></h3><p><strong>Ferris</strong> is the name of <code>the official mascot</code>, a crab, of the Rust programming language. The mascot was designed by Karen Rustad Tölva. The name Ferris is a play on &quot;ferrous&quot; (related to iron).</p><table tabindex="0"><thead><tr><th>Ferris</th><th>Meaning</th></tr></thead><tbody><tr><td><img src="https://doc.rust-lang.org/stable/book/img/ferris/does_not_compile.svg" alt="Ferris the Crab - Does Not Compile" width="60"></td><td>This code does not compile!</td></tr><tr><td><img src="https://doc.rust-lang.org/stable/book/img/ferris/panics.svg" alt="Ferris the Crab - Panics" width="60"></td><td>This code panics!</td></tr><tr><td><img src="https://doc.rust-lang.org/stable/book/img/ferris/not_desired_behavior.svg" alt="Ferris the Crab - Bug" width="60"></td><td>This code does not produce the desired behavior.</td></tr></tbody></table><h3 id="rustaceans" tabindex="-1">Rustaceans: <a class="header-anchor" href="#rustaceans" aria-label="Permalink to &quot;Rustaceans:&quot;">​</a></h3><p>The Rust community refers to themselves as &quot;Rustaceans.&quot;</p>',15)])])}const m=e(s,[["render",n]]);export{g as __pageData,m as default};
